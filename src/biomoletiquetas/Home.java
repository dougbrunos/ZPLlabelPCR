package biomoletiquetas;

import java.io.FileOutputStream;
import java.io.OutputStream;
import java.nio.charset.StandardCharsets;
import javax.swing.JOptionPane;
import java.awt.Toolkit;

public class Home extends javax.swing.JFrame {

    public Home() {
        initComponents();
    }

    public static void criarCodigo() {
        String produto = txtProduto.getText();
        String agenteAlvo = txtAgenteAlvo.getText();
        String quantidade = txtQuantidade.getText() + " reações";
        String fabricacao = "F: " +fxtFabricacao.getText();
        String lote = "L: " +txtLote.getText().toUpperCase();

        Object[] options = {"Sim", "Não"};
        int confirma = JOptionPane.showOptionDialog(null, "Confirma os dados a seguir?\n" + produto + "\n" + agenteAlvo + "\n" + quantidade + "\n" + fabricacao + "\n" + lote, "Atenção", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (confirma == JOptionPane.YES_OPTION) {
            //caso sim
            // Gerar o código ZPL para imprimir as etiquetas
            StringBuilder codigoZPL = new StringBuilder("^XA");
            codigoZPL.append("^PW802");
            codigoZPL.append("^LL150");
            codigoZPL.append("^CI28"); // Seleciona a codificação UTF-8
            for (int i = 0; i < 4; i++) {
                codigoZPL.append("^CW1,E:ARI001.FNT"); // Define a fonte
                codigoZPL.append("^CF0,17^FO").append(20 + i * 200).append(",7^FD").append(produto).append("^FS");
                codigoZPL.append("^CF0,19^FO").append(20 + i * 200).append(",24^FD").append(agenteAlvo).append("^FS");
                codigoZPL.append("^CF0,18^FO").append(20 + i * 200).append(",42^FD").append(quantidade).append("^FS");
                codigoZPL.append("^CF0,17^FO").append(20 + i * 200).append(",60^FD").append(fabricacao).append("^FS");
                codigoZPL.append("^CF0,17^FO").append(20 + i * 200).append(",76^FD").append(lote).append("^FS");
                codigoZPL.append("^CF0,16^FO").append(40 + i * 200).append(",92^FD").append("Manter a -20°C").append("^FS");
            }
            codigoZPL.append("^XZ");
            String ZPL = codigoZPL.toString();
            imprimirEtiqueta(ZPL);
        }
    }

    public static void imprimirEtiqueta(String codigoZPL) {
        try {
            // Abre a porta USB001
            OutputStream out = new FileOutputStream("com1:");

            // Converte o código ZPL para um array de bytes e envia para a porta USB
            out.write(codigoZPL.getBytes(StandardCharsets.UTF_8));

            // Fecha a porta USB
            out.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao enviar impressão: " + e, "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProduto = new javax.swing.JLabel();
        txtProduto = new javax.swing.JTextField();
        lblAgenteAlvo = new javax.swing.JLabel();
        txtAgenteAlvo = new javax.swing.JTextField();
        lblQuantidade = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        lblFabricacao = new javax.swing.JLabel();
        fxtFabricacao = new javax.swing.JFormattedTextField();
        lblLote = new javax.swing.JLabel();
        txtLote = new javax.swing.JTextField();
        btnImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Biologia Molecular - Etiquetas");
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/logoBio.png")));
        setResizable(false);

        lblProduto.setText("Produto:");

        txtProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdutoActionPerformed(evt);
            }
        });

        lblAgenteAlvo.setText("Agente Alvo:");

        lblQuantidade.setText("Quantidade:");

        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadeActionPerformed(evt);
            }
        });

        lblFabricacao.setText("Fabricação:");

        try {
            fxtFabricacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        fxtFabricacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fxtFabricacaoActionPerformed(evt);
            }
        });

        lblLote.setText("Lote:");

        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLote)
                    .addComponent(lblFabricacao)
                    .addComponent(lblQuantidade)
                    .addComponent(lblAgenteAlvo)
                    .addComponent(lblProduto))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtProduto)
                    .addComponent(txtAgenteAlvo)
                    .addComponent(txtQuantidade)
                    .addComponent(fxtFabricacao, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(txtLote))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(210, Short.MAX_VALUE)
                .addComponent(btnImprimir)
                .addGap(151, 151, 151))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProduto)
                    .addComponent(txtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgenteAlvo)
                    .addComponent(txtAgenteAlvo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidade)
                    .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFabricacao)
                    .addComponent(fxtFabricacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLote)
                    .addComponent(txtLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnImprimir)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProdutoActionPerformed

    private void txtQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadeActionPerformed

    private void fxtFabricacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fxtFabricacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fxtFabricacaoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
        boolean vazio = false;

        if (txtProduto.getText().isEmpty()) {
            txtProduto.requestFocus();
            vazio = true;
        } else if (txtAgenteAlvo.getText().isEmpty()) {
            txtAgenteAlvo.requestFocus();
            vazio = true;
        } else if (txtQuantidade.getText().isEmpty()) {
            txtQuantidade.requestFocus();
            vazio = true;
        } else if (fxtFabricacao.getText().isEmpty()) {
            fxtFabricacao.requestFocus();
            vazio = true;
        } else if (txtLote.getText().isEmpty()) {
            txtLote.requestFocus();
            vazio = true;
        }

        // Caso haja algum problema a função não segue adiante.
        if (vazio) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos!");
        } else {
            criarCodigo();
        }

    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimir;
    public static javax.swing.JFormattedTextField fxtFabricacao;
    private javax.swing.JLabel lblAgenteAlvo;
    private javax.swing.JLabel lblFabricacao;
    private javax.swing.JLabel lblLote;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblQuantidade;
    public static javax.swing.JTextField txtAgenteAlvo;
    public static javax.swing.JTextField txtLote;
    public static javax.swing.JTextField txtProduto;
    public static javax.swing.JTextField txtQuantidade;
    // End of variables declaration//GEN-END:variables
}
